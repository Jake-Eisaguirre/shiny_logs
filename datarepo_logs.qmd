---
title: "RIBBiTR_DataRepo_Logs"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

# Packages
```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}
shelf(tidyverse, googledrive, here, janitor, rjson, jsonlite, ndjson, tidyjson, learnitdown)


```

# Download .json logs
```{r}
#| echo: false

unlink(here("data/*"))

logs_output_folder <- "https://drive.google.com/drive/folders/1RIThFYRvFXQ0m0XefcETOCQ05meM_7wr"

log_output_folder_id <- drive_get(as_id(logs_output_folder))

files <- drive_ls(log_output_folder_id) 

for (i in files$id){
  drive_download(file = as_id(i), path = paste0(here("data"), "/", i, ".json"), overwrite = T)
}

rm(files, log_output_folder_id)
```

# Bind .json files together
```{r}

filenames <- gsub("\\.json$","", list.files(here("data")))

for(i in filenames){
  assign(i, fromJSON(here("data", paste(i, ".json", sep=""))))
}

merged <- lapply(ls(), get)

rm(list=setdiff(ls(), "merged"))

```

# Unnest list
```{r}

d <- bind_rows(merged[[2]]$inputs %>%
            mutate(type = "input"),
          merged[[2]]$outputs %>%
            mutate(type = "output"),
          merged[[2]]$session %>% 
            mutate(type = "session")) %>%
  mutate(timestamp = lubridate::ydm_hms(timestamp)) %>% 
  filter(str_detect(name,"download_btn") |
         str_detect(name, "location") | 
         str_detect(name, "region"))
  
```

```{r}

df_format <- purrr::map_dfr(merged, .id = "id", ~ {dplyr::bind_rows(.$inputs %>%
                                                                       mutate(type = "input"),
                                                                .$outputs %>% 
                                                                  mutate(type = "output")) %>% 
    mutate(timestamp = lubridate::ymd_hms(timestamp))})

```


